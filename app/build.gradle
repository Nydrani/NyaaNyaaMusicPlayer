apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply from: "$rootDir/signing.gradle"
apply from: "$rootDir/versioning.gradle"
apply from: "$rootDir/lib-versioning.gradle"

android {
    signingConfigs {
        release {
            Properties properties = getFileProperties('../keystore.properties')
            storeFile file(getFileProperty(properties, 'store'))
            storePassword getFileProperty(properties, 'storepass')
            keyAlias getFileProperty(properties, 'alias')
            keyPassword getFileProperty(properties, 'aliaspass')
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'xyz.lostalishar.nyaanyaamusicplayer'
        minSdkVersion 21
        targetSdkVersion 27
        versionCode this.getVersionCode()
        versionName this.getVersionName()
        testApplicationId "xyz.test.nyaanyaamusicplayer"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            ext.enableCrashlytics = false
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
}

afterEvaluate {
    initFabricPropertiesIfNeeded()
}

def initFabricPropertiesIfNeeded() {
    def propertiesFile = file('../fabric.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated fabric property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: fabricApiSecret)
            entry(key: "apiKey", value: fabricApiKey)
        }
    }
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")
    androidTestImplementation("com.android.support.test.espresso:espresso-core:2.2.2", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:preference-v7:$supportLibVersion"
    implementation "com.sothree.slidinguppanel:library:3.3.1"
    implementation "com.afollestad:material-cab:0.1.12"
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
    implementation('com.crashlytics.sdk.android:answers:1.4.1@aar') {
        transitive = true
    }
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:2.1.3"
}
